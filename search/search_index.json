{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"G\u00e9n\u00e9rer des suites en informatique","text":"<p>Les suites math\u00e9matiques sont des objets qui r\u00e9pondent \u00e0 des r\u00e8gles simples permettant de les g\u00e9n\u00e9rer. On retrouve par exemple :</p> <ul> <li>une formule explicite ;</li> <li>une formule r\u00e9currente ;</li> <li>une formule utilisant une autre suite ;</li> <li>etc.</li> </ul> <p>Dans ce TP, on apprend \u00e0 g\u00e9n\u00e9rer des suites sur tableur et en Python afin d'observer leur comportement \u00e0 l'infini.</p>"},{"location":"#avec-un-tableur","title":"Avec un tableur","text":""},{"location":"#pour-commencer","title":"Pour commencer","text":"<p>Les tableurs sont les logiciels le plus adapt\u00e9s pour observer le comportement d'une suite. On s'int\u00e9resse ici aux trois suites \\(u\\), \\(v\\) et \\(w\\) d\u00e9finies pour tout entier naturel \\(n\\) par :</p> \\[ u_n = n^2+n+41 \\qquad\\qquad \\left\\lbrace\\begin{array}{lcl}v_0&amp;=&amp;1\\\\ v_{n+1}&amp;=&amp;2-3v_n\\end{array}\\right. \\qquad\\qquad \\left\\lbrace\\begin{array}{lcl}w_0&amp;=&amp;5\\\\ w_{n+1}&amp;=&amp;w_n-4n^2+1\\end{array}\\right. \\] <p>Vocabulaire</p> <p>La suite \\(u\\) est dite explicite alors que \\(v\\) est dite r\u00e9currente. La suite \\(w\\) est plut\u00f4t consid\u00e9r\u00e9e comme r\u00e9currente.</p> <p>Quelques manipulations</p> <ol> <li>Ouvrez le logiciel LibreOffice Calc </li> <li>Reproduisez le tableau ci-dessous avec la valeur de \\(n\\) qui varie de 0 jusque 100.  </li> <li>Dans la cellule \\(B2\\) (concernant la suite \\(u\\)), saisissez la formule \\(\\fbox{=PUISSANCE(A2;2)+A2+41}\\) puis validez.</li> <li>\u00c9tirez cette formule en double cliquant sur le petit carr\u00e9 en bas \u00e0 droite de cette cellule.  </li> <li>De la m\u00eame fa\u00e7on entrez la valeur associ\u00e9e \u00e0 \\(v_0\\) dans la cellule \\(C2\\) puis saisissez la formule \\(\\fbox{=2-3*C2}\\) dans la cellule \\(C3\\).</li> <li>Entrez la valeur associ\u00e9e \u00e0 \\(w_0\\) dans la cellule \\(D2\\) puis saissisez la formule \\(\\fbox{=D2-4*PUISSANCE(A2;2)+1}\\) dans la cellule \\(D3\\).</li> </ol>"},{"location":"#a-vous-de-jouer","title":"\u00c0 vous de jouer","text":"<p>On consid\u00e8re les suites \\(u\\), \\(v\\) et \\(w\\) d\u00e9finies pour tout entier naturel \\(n\\) par :</p> \\[ u_n = 3^n+n-1 \\qquad\\qquad \\left\\lbrace\\begin{array}{lcl}v_0&amp;=&amp;0\\\\ v_{n+1}&amp;=&amp;3v_n-2n+3\\end{array}\\right. \\qquad\\qquad w_n = v_n-n+1 \\] <ol> <li>R\u00e9alisez un tableur g\u00e9n\u00e9rant les dix premiers termes de ces trois suites.</li> </ol>"},{"location":"#avec-python","title":"Avec Python","text":""},{"location":"#pour-commencer_1","title":"Pour commencer","text":"<p>Le langage Python est un atout informatique pour sa praticit\u00e9 et sa capacit\u00e9 \u00e0 effectuer des calculs importants.</p> <p>Tip</p> <p>En python, pour d\u00e9finir une suite on utilise la notion de fonction.</p> <p>On consid\u00e8re les suites \\(u\\), \\(v\\) et \\(w\\) d\u00e9finies pour tout entier naturel \\(n\\) par :</p> \\[ u_n = 3n^2-4n+1 \\qquad\\qquad \\left\\lbrace\\begin{array}{lcl}v_0&amp;=&amp;-4\\\\ v_{n+1}&amp;=&amp;\\sqrt{2v_n+9}\\end{array}\\right. \\qquad\\qquad \\left\\lbrace\\begin{array}{lcl}w_1&amp;=&amp;\\frac{1}{2}\\\\ w_{n+1}&amp;=&amp;\\frac{n+1}{2n}w_n\\end{array}\\right. \\] <p>Pour les suites explicites comme \\(u\\), il est tr\u00e8s simple d'utiliser le langage Python :</p> <p>Quelques manipulations</p> <ol> <li>Ouvrez le logiciel Thonny  </li> <li> <p>Dans la zone de script (partie sup\u00e9rieure du logiciel), \u00e9crivez le code :</p> Implantation de la suite u<pre><code>def u(n):\n    return 3*n**2-4*n+1\n</code></pre> </li> <li> <p>Enregistrez le fichier puis ex\u00e9cutez le gr\u00e2ce au bouton  </p> </li> <li>Pour g\u00e9n\u00e9rer les dix premiers termes de la suite \\(u\\), tapez dans la console (partie inf\u00e9rieure du logiciel), l'instruction <code>[u(k) for k in range(10)]</code>.  </li> </ol> <p>En python, il n'est possible que de g\u00e9n\u00e9rer des suites de la forme \\(u(n)\\) et non pas \\(u(n+1)\\). Ainsi, pour la suite \\(v\\) d\u00e9finie par : </p> \\[ \\left\\lbrace\\begin{array}{lcl}v_0&amp;=&amp;-4\\\\ v_{n+1}&amp;=&amp;\\sqrt{2v_n+9}\\end{array}\\right. \\] <p>il est d'abord n\u00e9cessaire de la r\u00e9\u00e9crire sous la forme :</p> \\[ \\left\\lbrace\\begin{array}{lcl}v_0&amp;=&amp;-4\\\\ v_{n}&amp;=&amp;\\sqrt{2v_{n-1}+9}\\end{array}\\right. \\] <p>Info</p> <p>On a r\u00e9alis\u00e9 un d\u00e9calage de l'indice. Le \\(n+1\\) est devenu \\(n\\) et donc le \\(n\\) est devenu \\(n-1\\).</p> <p>Quelques manipulations</p> <ol> <li> <p>\u00c0 la suite du code pr\u00e9c\u00e9dent, tapez le code suivant :</p> Implantation de la suite v<pre><code>from math import sqrt\n\ndef v(n):\n    if n == 0:\n        return -4\n    else:\n        return sqrt(2*v(n-1)+9)\n</code></pre> </li> <li> <p>Pour g\u00e9n\u00e9rer les quinze premiers termes, tapez dans la console <code>[v(k) for k in range(15)]</code>.  </p> </li> </ol> <p>Pour la suite \\(w\\) d\u00e9finie par :</p> \\[ \\left\\lbrace\\begin{array}{lcl}w_1&amp;=&amp;\\frac{1}{2}\\\\ w_{n+1}&amp;=&amp;\\frac{n+1}{2n}w_n\\end{array}\\right. \\] <p>il faut faire attention au fait que le premier terme est \\(w_1\\) et non pas \\(w_0\\). De plus, il faudra bien d\u00e9caler tous les indices pour g\u00e9n\u00e9rer la bonne suite. En effet, \\(w\\) devient apr\u00e8s d\u00e9calage :</p> \\[ \\left\\lbrace\\begin{array}{lcl}w_1&amp;=&amp;\\frac{1}{2}\\\\ w_{n}&amp;=&amp;\\frac{(n-1)+1}{2(n-1)}w_{n-1} = \\frac{n}{2(n-1)}w_{n-1}\\end{array}\\right. \\] <p>Quelques manipulations</p> <ol> <li> <p>\u00c0 la suite du code pr\u00e9c\u00e9dent, tapez le code suivant :</p> Implantation de la suite w<pre><code>def w(n):\n    if n == 1:\n        return 1/2\n    else:\n        return (n/(2*(n-1)))*w(n-1)\n</code></pre> <p>Warning</p> <p>Remarquez que dans le bloc conditionnel, on a bien <code>if n == 1</code> pour la gestion de \\(w_1\\).</p> </li> <li> <p>G\u00e9n\u00e9rez les sept premiers termes gr\u00e2ce \u00e0 l'instruction <code>[w(k) for k in range(1, 8)]</code> </p> </li> </ol>"},{"location":"#a-vous-de-jouer_1","title":"\u00c0 vous de jouer","text":"<p>On s'int\u00e9resse aux suites d\u00e9finies pour tout entier naturel par :</p> \\[ u_n = \\left(1+\\frac{1}{n}\\right)^n \\qquad \\qquad \\left\\lbrace\\begin{array}{lcl}v_0&amp;=&amp; 1\\\\v_1 &amp; = &amp; 1\\\\ v_{n+1}&amp;=&amp;v_n+v_{n-1}\\end{array}\\right. \\qquad\\qquad \\left\\lbrace\\begin{array}{lcl}x_0&amp;=&amp;200\\\\y_0&amp;=&amp;50\\\\ x_{n+1}&amp;=&amp;1,05x_n-0,001x_ny_n\\\\ y_{n+1}&amp;=&amp;0,97y_n+0,0002x_ny_n\\end{array}\\right. \\] <ol> <li>\u00c9crivez un script permettant de d\u00e9finir ces trois suites puis g\u00e9n\u00e9rez les douze premiers termes de chacune d'entre elles.</li> </ol>"}]}